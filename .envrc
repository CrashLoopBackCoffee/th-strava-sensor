# This repo uses uv for dependency management
uv sync --locked

export BASEDIR=$(git rev-parse --show-toplevel)

# Add helper scripts in deploy-base to PATH
export PATH="${BASEDIR}/scripts:${PATH}"

#  check if repo is enabled for pre-commit by checking if present in venv
if [ -f "./.venv/bin/pre-commit" ] && [ "${SKIP_PRE_COMMIT:-false}" != "true" ]; then

  #  link config if not present
  if [ ! -f ".pre-commit-config.yaml" ]; then
    echo -e "${GREEN}Linking .pre-commit-config.yaml$NC"
    ln -fs "${BASEDIR}/.pre-commit-config.yaml" .
  fi

  # Install pre-commit hook
  if [ ! -f ".git/hooks/pre-commit" ]; then
    echo -e "${GREEN}Installing pre-commit hook$NC"
    ./.venv/bin/pre-commit install
  fi

  # Install pre-push hook
  if [ ! -f ".git/hooks/pre-push" ]; then
    echo -e "${GREEN}Installing pre-push hook$NC"
    ./.venv/bin/pre-commit install --hook-type pre-push
  fi

  # Install hooks to save time on first commit
  echo "Ensuring pre-commit hooks are installed"
  ./.venv/bin/pre-commit install-hooks
else
  echo -e "${YELLOW}Pre-commit not enabled for this repo!$NC"
  echo -e "To enable pre-commit, run: ${PURPLE}poetry add --group dev pre-commit filelock distlib pyright ruff yamllint$NC"
fi

ONE_PASSWORD_TOKEN="op://Pulumi/7pgmqbvpk6xaps4exrjgbjyy24/password"

# Only authenticate with 1Password if not already authenticated
if [ -z "${OP_SERVICE_ACCOUNT_TOKEN:-}" ]; then
  echo -e "Setting up 1Password CLI"
  export OP_SERVICE_ACCOUNT_TOKEN=$(op.exe read "${ONE_PASSWORD_TOKEN}")
else
  echo -e "1Password CLI already authenticated, using existing token"
fi

export GARMIN_USERNAME=$(op read "op://Pulumi/sso.garmin.com/username")
export GARMIN_PASSWORD=$(op read "op://Pulumi/sso.garmin.com/password")
export MQTT_BROKER_URL="mqtts://mqtt.tobiash.net:8883"
export MQTT_USERNAME=$(op read "op://Pulumi/Mosquitto/username")
export MQTT_PASSWORD=$(op read "op://Pulumi/Mosquitto/password")

export STRAVA_CLIENT_ID=$(op read "op://Pulumi/Strava App/Client ID")
export STRAVA_CLIENT_SECRET=$(op read "op://Pulumi/Strava App/Client Secret")
export STRAVA_REFRESH_TOKEN=$(op read "op://Pulumi/Strava App/Refresh Token")
